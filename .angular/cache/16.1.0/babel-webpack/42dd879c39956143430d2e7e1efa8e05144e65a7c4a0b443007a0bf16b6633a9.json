{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class QuizService {\n  constructor() {\n    this.currentIdxSubject = new BehaviorSubject(0);\n    this.currentIdx$ = this.currentIdxSubject.asObservable();\n    this.correctCountSubject = new BehaviorSubject(0);\n    this.correctCount$ = this.correctCountSubject.asObservable();\n    this.progressWidthSubject = new BehaviorSubject(0);\n    this.progressWidth$ = this.progressWidthSubject.asObservable();\n    this.yourElementWidthSubject = new BehaviorSubject(440);\n    this.yourElementWidth$ = this.yourElementWidthSubject.asObservable();\n    this.quizData = [{\n      id: Math.random().toString(),\n      question: 'How many oceans are there ?',\n      answers: ['Seven', 'Two', 'Four', 'Nine'],\n      correctAnswer: 3\n    }, {\n      id: Math.random().toString(),\n      question: 'Who discovered America ?',\n      answers: ['Mozart', 'Fernan Magellan', 'Vasco Da Gamma', 'Christopher Colombos'],\n      correctAnswer: 4\n    }, {\n      id: Math.random().toString(),\n      question: 'Who is the author of the picture \"Scream\" ?',\n      answers: ['Edvard Munch', 'Salvador Dali', 'Michelangelo', 'Luciano Pavarotti'],\n      correctAnswer: 1\n    }, {\n      id: Math.random().toString(),\n      question: 'Who won the World Cup 2023 ?',\n      answers: ['Armenia', 'Argentina', 'Brazil', 'France'],\n      correctAnswer: 2\n    }, {\n      id: Math.random().toString(),\n      question: 'Who is the best soccer player of all time ?',\n      answers: ['Leo Messi', 'Pele', 'Maradonna', 'C. Ronaldo'],\n      correctAnswer: 1\n    }];\n  }\n  handleNext(idx, corAnsw) {\n    this.currentIdxSubject.next(this.currentIdxSubject.value + 1);\n    this.progressWidthSubject.next(this.progressWidthSubject.value + 92);\n    if (idx === corAnsw) {\n      this.correctCountSubject.next(this.correctCountSubject.value + 1);\n    }\n  }\n  updateYourElementWidth(width) {\n    this.yourElementWidthSubject.next(width);\n  }\n  ngOnInit() {}\n}\nQuizService.ɵfac = function QuizService_Factory(t) {\n  return new (t || QuizService)();\n};\nQuizService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: QuizService,\n  factory: QuizService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","QuizService","constructor","currentIdxSubject","currentIdx$","asObservable","correctCountSubject","correctCount$","progressWidthSubject","progressWidth$","yourElementWidthSubject","yourElementWidth$","quizData","id","Math","random","toString","question","answers","correctAnswer","handleNext","idx","corAnsw","next","value","updateYourElementWidth","width","ngOnInit","factory","ɵfac","providedIn"],"sources":["C:\\Users\\user\\Desktop\\angular-quizz\\src\\app\\services\\quiz.service.ts"],"sourcesContent":["import { Injectable, OnInit } from '@angular/core';\nimport { QuizData } from '../models/models';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuizService implements OnInit {\n  private currentIdxSubject: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n  currentIdx$ = this.currentIdxSubject.asObservable();\n\n  private correctCountSubject: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n  correctCount$ = this.correctCountSubject.asObservable()\n\n  private progressWidthSubject: BehaviorSubject<any> = new BehaviorSubject<number | null>(0)\n  progressWidth$ = this.progressWidthSubject.asObservable()\n\n  private yourElementWidthSubject: BehaviorSubject<number> = new BehaviorSubject<number>(440);\n  yourElementWidth$ = this.yourElementWidthSubject.asObservable();\n\n  quizData: QuizData[] = [\n    {\n      id: Math.random().toString(),\n      question: 'How many oceans are there ?',\n      answers: ['Seven', 'Two', 'Four', 'Nine'],\n      correctAnswer: 3,\n    },\n    {\n      id: Math.random().toString(),\n      question: 'Who discovered America ?',\n      answers: ['Mozart', 'Fernan Magellan', 'Vasco Da Gamma', 'Christopher Colombos'],\n      correctAnswer: 4,\n    },\n    {\n      id: Math.random().toString(),\n      question: 'Who is the author of the picture \"Scream\" ?',\n      answers: ['Edvard Munch', 'Salvador Dali', 'Michelangelo', 'Luciano Pavarotti'],\n      correctAnswer: 1,\n    },\n    {\n      id: Math.random().toString(),\n      question: 'Who won the World Cup 2023 ?',\n      answers: ['Armenia', 'Argentina', 'Brazil', 'France'],\n      correctAnswer: 2,\n    },\n    {\n      id: Math.random().toString(),\n      question: 'Who is the best soccer player of all time ?',\n      answers: ['Leo Messi', 'Pele', 'Maradonna', 'C. Ronaldo'],\n      correctAnswer: 1,\n    },\n  ]\n  constructor() { }\n\n  handleNext(idx: number, corAnsw: number) {\n    this.currentIdxSubject.next(this.currentIdxSubject.value + 1);\n    this.progressWidthSubject.next(this.progressWidthSubject.value + 92)\n\n    if (idx === corAnsw) {\n      this.correctCountSubject.next(this.correctCountSubject.value + 1);\n    }\n  }\n\n  updateYourElementWidth(width: number) {\n    this.yourElementWidthSubject.next(width);\n  }\n\n  ngOnInit(): void {\n\n  }\n}\n"],"mappings":"AAEA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,WAAW;EA6CtBC,YAAA;IA5CQ,KAAAC,iBAAiB,GAA4B,IAAIH,eAAe,CAAS,CAAC,CAAC;IACnF,KAAAI,WAAW,GAAG,IAAI,CAACD,iBAAiB,CAACE,YAAY,EAAE;IAE3C,KAAAC,mBAAmB,GAA4B,IAAIN,eAAe,CAAS,CAAC,CAAC;IACrF,KAAAO,aAAa,GAAG,IAAI,CAACD,mBAAmB,CAACD,YAAY,EAAE;IAE/C,KAAAG,oBAAoB,GAAyB,IAAIR,eAAe,CAAgB,CAAC,CAAC;IAC1F,KAAAS,cAAc,GAAG,IAAI,CAACD,oBAAoB,CAACH,YAAY,EAAE;IAEjD,KAAAK,uBAAuB,GAA4B,IAAIV,eAAe,CAAS,GAAG,CAAC;IAC3F,KAAAW,iBAAiB,GAAG,IAAI,CAACD,uBAAuB,CAACL,YAAY,EAAE;IAE/D,KAAAO,QAAQ,GAAe,CACrB;MACEC,EAAE,EAAEC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAE;MAC5BC,QAAQ,EAAE,6BAA6B;MACvCC,OAAO,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;MACzCC,aAAa,EAAE;KAChB,EACD;MACEN,EAAE,EAAEC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAE;MAC5BC,QAAQ,EAAE,0BAA0B;MACpCC,OAAO,EAAE,CAAC,QAAQ,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,sBAAsB,CAAC;MAChFC,aAAa,EAAE;KAChB,EACD;MACEN,EAAE,EAAEC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAE;MAC5BC,QAAQ,EAAE,6CAA6C;MACvDC,OAAO,EAAE,CAAC,cAAc,EAAE,eAAe,EAAE,cAAc,EAAE,mBAAmB,CAAC;MAC/EC,aAAa,EAAE;KAChB,EACD;MACEN,EAAE,EAAEC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAE;MAC5BC,QAAQ,EAAE,8BAA8B;MACxCC,OAAO,EAAE,CAAC,SAAS,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,CAAC;MACrDC,aAAa,EAAE;KAChB,EACD;MACEN,EAAE,EAAEC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAE;MAC5BC,QAAQ,EAAE,6CAA6C;MACvDC,OAAO,EAAE,CAAC,WAAW,EAAE,MAAM,EAAE,WAAW,EAAE,YAAY,CAAC;MACzDC,aAAa,EAAE;KAChB,CACF;EACe;EAEhBC,UAAUA,CAACC,GAAW,EAAEC,OAAe;IACrC,IAAI,CAACnB,iBAAiB,CAACoB,IAAI,CAAC,IAAI,CAACpB,iBAAiB,CAACqB,KAAK,GAAG,CAAC,CAAC;IAC7D,IAAI,CAAChB,oBAAoB,CAACe,IAAI,CAAC,IAAI,CAACf,oBAAoB,CAACgB,KAAK,GAAG,EAAE,CAAC;IAEpE,IAAIH,GAAG,KAAKC,OAAO,EAAE;MACnB,IAAI,CAAChB,mBAAmB,CAACiB,IAAI,CAAC,IAAI,CAACjB,mBAAmB,CAACkB,KAAK,GAAG,CAAC,CAAC;;EAErE;EAEAC,sBAAsBA,CAACC,KAAa;IAClC,IAAI,CAAChB,uBAAuB,CAACa,IAAI,CAACG,KAAK,CAAC;EAC1C;EAEAC,QAAQA,CAAA,GAER;;AA9DW1B,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAA2B,OAAA,EAAX3B,WAAW,CAAA4B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}