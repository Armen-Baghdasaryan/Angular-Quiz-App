{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport class QuizService {\n  constructor() {\n    this.currentIdxSubject = new BehaviorSubject(0);\n    this.currentIdx$ = this.currentIdxSubject.asObservable();\n    this.correctCountSubject = new BehaviorSubject(0);\n    this.correctCount$ = this.correctCountSubject.asObservable();\n    this.progressWidthSubject = new BehaviorSubject(0);\n    this.progressWidth$ = this.progressWidthSubject.asObservable();\n    this.progressElementWidthSubject = new BehaviorSubject(440);\n    this.progressElementWidth$ = this.progressElementWidthSubject.asObservable();\n    this.checkAnsverSubject = new BehaviorSubject(null);\n    this.checkAnswer$ = this.checkAnsverSubject.asObservable();\n    this.answerIsChoosedSubject = new BehaviorSubject(false);\n    this.answerIsChoosed$ = this.answerIsChoosedSubject.asObservable();\n    this.quizData = [\n    // {\n    //   id: JSON.stringify(Math.random() * Math.random()),\n    //   question: \"How many oceans are there?\",\n    //   answers: [\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Seven\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Two\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Four\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Nine\",\n    //       isChoosed: false,\n    //     },\n    //   ],\n    //   correctAnswer: 3,\n    // },\n    // {\n    //   id: JSON.stringify(Math.random() * Math.random()),\n    //   question: \"Who discovered America?\",\n    //   answers: [\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Mozart\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Fernan Magellan\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Vasco Da Gamma\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Christopher Colombos\",\n    //       isChoosed: false,\n    //     },\n    //   ],\n    //   correctAnswer: 4,\n    // },\n    // {\n    //   id: JSON.stringify(Math.random() * Math.random()),\n    //   question: 'Who is the author of the picture \"Scream\"?',\n    //   answers: [\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Edvard Munch\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Salvador Dali\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Michelangelo\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Luciano Pavarotti\",\n    //       isChoosed: false,\n    //     },\n    //   ],\n    //   correctAnswer: 1,\n    // },\n    // {\n    //   id: JSON.stringify(Math.random() + Math.random()),\n    //   question: \"Who won the World Cup 2023 ?\",\n    //   answers: [\n    //     {\n    //       id: JSON.stringify(Math.random() + Math.random()),\n    //       answer: \"Armenia\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() + Math.random()),\n    //       answer: \"Argentina\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() + Math.random()),\n    //       answer: \"Brazil\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() + Math.random()),\n    //       answer: \"France\",\n    //       isChoosed: false,\n    //     },\n    //   ],\n    //   correctAnswer: 2,\n    // },\n    {\n      id: Math.random().toString(),\n      question: \"Who is the best soccer player of all time ?\",\n      answers: [{\n        id: Math.random().toString(),\n        answer: \"Leo Messi\",\n        isChoosed: false\n      }, {\n        id: Math.random().toString(),\n        answer: \"Pele\",\n        isChoosed: false\n      }, {\n        id: Math.random().toString(),\n        answer: \"Maradonna\",\n        isChoosed: false\n      }, {\n        id: Math.random().toString(),\n        answer: \"C. Ronaldo\",\n        isChoosed: false\n      }],\n      correctAnswer: 1\n    }];\n  }\n  handleChoose(idx, corAnsw, id) {\n    this.progressWidthSubject.next(this.progressWidthSubject.value + this.progressElementWidthSubject.value / this.quizData.length);\n    if (idx === corAnsw) {\n      this.correctCountSubject.next(this.correctCountSubject.value + 1);\n      this.checkAnsverSubject.next(true);\n    } else {\n      this.checkAnsverSubject.next(false);\n    }\n    this.answerIsChoosedSubject.next(true);\n    this.handleChangeItem(id, idx);\n  }\n  handleChangeItem(id, idx) {\n    this.quizData.map(quiz => {\n      if (quiz.id === id) {\n        quiz.answers.map((answer, i) => {\n          if (i + 1 === idx) {}\n        });\n      }\n      return null;\n    });\n  }\n  handleNext() {\n    this.currentIdxSubject.next(this.currentIdxSubject.value + 1);\n    this.checkAnsverSubject.next(null);\n    this.answerIsChoosedSubject.next(false);\n  }\n  updateProgressElementWidth(width) {\n    this.progressElementWidthSubject.next(width);\n  }\n  ngOnInit() {}\n}\nQuizService.ɵfac = function QuizService_Factory(t) {\n  return new (t || QuizService)();\n};\nQuizService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: QuizService,\n  factory: QuizService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"names":["BehaviorSubject","QuizService","constructor","currentIdxSubject","currentIdx$","asObservable","correctCountSubject","correctCount$","progressWidthSubject","progressWidth$","progressElementWidthSubject","progressElementWidth$","checkAnsverSubject","checkAnswer$","answerIsChoosedSubject","answerIsChoosed$","quizData","id","Math","random","toString","question","answers","answer","isChoosed","correctAnswer","handleChoose","idx","corAnsw","next","value","length","handleChangeItem","map","quiz","i","handleNext","updateProgressElementWidth","width","ngOnInit","factory","ɵfac","providedIn"],"sources":["C:\\Users\\user\\Desktop\\angular-quizz\\src\\app\\services\\quiz.service.ts"],"sourcesContent":["import { Injectable, OnInit } from \"@angular/core\";\nimport { QuizData } from \"../models/models\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class QuizService implements OnInit {\n  private currentIdxSubject: BehaviorSubject<number> =\n    new BehaviorSubject<number>(0);\n  currentIdx$ = this.currentIdxSubject.asObservable();\n\n  private correctCountSubject: BehaviorSubject<number> =\n    new BehaviorSubject<number>(0);\n  correctCount$ = this.correctCountSubject.asObservable();\n\n  private progressWidthSubject: BehaviorSubject<any> = new BehaviorSubject<\n    number | null\n  >(0);\n  progressWidth$ = this.progressWidthSubject.asObservable();\n\n  private progressElementWidthSubject: BehaviorSubject<number> =\n    new BehaviorSubject<number>(440);\n  progressElementWidth$ = this.progressElementWidthSubject.asObservable();\n\n  private checkAnsverSubject: BehaviorSubject<any> = new BehaviorSubject<any>(\n    null\n  );\n  checkAnswer$ = this.checkAnsverSubject.asObservable();\n\n  private answerIsChoosedSubject: BehaviorSubject<boolean> =\n    new BehaviorSubject<boolean>(false);\n  answerIsChoosed$ = this.answerIsChoosedSubject.asObservable();\n\n  quizData: QuizData[] = [\n    // {\n    //   id: JSON.stringify(Math.random() * Math.random()),\n    //   question: \"How many oceans are there?\",\n    //   answers: [\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Seven\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Two\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Four\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Nine\",\n    //       isChoosed: false,\n    //     },\n    //   ],\n    //   correctAnswer: 3,\n    // },\n    // {\n    //   id: JSON.stringify(Math.random() * Math.random()),\n    //   question: \"Who discovered America?\",\n    //   answers: [\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Mozart\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Fernan Magellan\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Vasco Da Gamma\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Christopher Colombos\",\n    //       isChoosed: false,\n    //     },\n    //   ],\n    //   correctAnswer: 4,\n    // },\n    // {\n    //   id: JSON.stringify(Math.random() * Math.random()),\n    //   question: 'Who is the author of the picture \"Scream\"?',\n    //   answers: [\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Edvard Munch\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Salvador Dali\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Michelangelo\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() * Math.random()),\n    //       answer: \"Luciano Pavarotti\",\n    //       isChoosed: false,\n    //     },\n    //   ],\n    //   correctAnswer: 1,\n    // },\n    // {\n    //   id: JSON.stringify(Math.random() + Math.random()),\n    //   question: \"Who won the World Cup 2023 ?\",\n    //   answers: [\n    //     {\n    //       id: JSON.stringify(Math.random() + Math.random()),\n    //       answer: \"Armenia\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() + Math.random()),\n    //       answer: \"Argentina\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() + Math.random()),\n    //       answer: \"Brazil\",\n    //       isChoosed: false,\n    //     },\n    //     {\n    //       id: JSON.stringify(Math.random() + Math.random()),\n    //       answer: \"France\",\n    //       isChoosed: false,\n    //     },\n    //   ],\n    //   correctAnswer: 2,\n    // },\n    {\n      id: Math.random().toString(),\n      question: \"Who is the best soccer player of all time ?\",\n      answers: [\n        {\n          id: Math.random().toString(),\n          answer: \"Leo Messi\",\n          isChoosed: false,\n        },\n        {\n          id: Math.random().toString(),\n          answer: \"Pele\",\n          isChoosed: false,\n        },\n        {\n          id: Math.random().toString(),\n          answer: \"Maradonna\",\n          isChoosed: false,\n        },\n        {\n          id: Math.random().toString(),\n          answer: \"C. Ronaldo\",\n          isChoosed: false,\n        },\n      ],\n      correctAnswer: 1,\n    },\n  ];\n\n  constructor() {}\n\n  handleChoose(idx: number, corAnsw: number, id: string) {\n    this.progressWidthSubject.next(\n      this.progressWidthSubject.value +\n        this.progressElementWidthSubject.value / this.quizData.length\n    );\n\n    if (idx === corAnsw) {\n      this.correctCountSubject.next(this.correctCountSubject.value + 1);\n      this.checkAnsverSubject.next(true);\n    } else {\n      this.checkAnsverSubject.next(false);\n    }\n    this.answerIsChoosedSubject.next(true);\n\n    this.handleChangeItem(id, idx);\n  }\n\n  handleChangeItem(id: string, idx: number) {\n    this.quizData.map((quiz) => {\n      if (quiz.id === id) {\n        quiz.answers.map((answer, i) => {\n          if (i + 1 === idx) {\n          }\n        });\n      }\n      return null;\n    });\n  }\n\n  handleNext() {\n    this.currentIdxSubject.next(this.currentIdxSubject.value + 1);\n    this.checkAnsverSubject.next(null);\n    this.answerIsChoosedSubject.next(false);\n  }\n\n  updateProgressElementWidth(width: number) {\n    this.progressElementWidthSubject.next(width);\n  }\n\n  ngOnInit(): void {}\n}\n"],"mappings":"AAEA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,WAAW;EAqKtBC,YAAA;IApKQ,KAAAC,iBAAiB,GACvB,IAAIH,eAAe,CAAS,CAAC,CAAC;IAChC,KAAAI,WAAW,GAAG,IAAI,CAACD,iBAAiB,CAACE,YAAY,EAAE;IAE3C,KAAAC,mBAAmB,GACzB,IAAIN,eAAe,CAAS,CAAC,CAAC;IAChC,KAAAO,aAAa,GAAG,IAAI,CAACD,mBAAmB,CAACD,YAAY,EAAE;IAE/C,KAAAG,oBAAoB,GAAyB,IAAIR,eAAe,CAEtE,CAAC,CAAC;IACJ,KAAAS,cAAc,GAAG,IAAI,CAACD,oBAAoB,CAACH,YAAY,EAAE;IAEjD,KAAAK,2BAA2B,GACjC,IAAIV,eAAe,CAAS,GAAG,CAAC;IAClC,KAAAW,qBAAqB,GAAG,IAAI,CAACD,2BAA2B,CAACL,YAAY,EAAE;IAE/D,KAAAO,kBAAkB,GAAyB,IAAIZ,eAAe,CACpE,IAAI,CACL;IACD,KAAAa,YAAY,GAAG,IAAI,CAACD,kBAAkB,CAACP,YAAY,EAAE;IAE7C,KAAAS,sBAAsB,GAC5B,IAAId,eAAe,CAAU,KAAK,CAAC;IACrC,KAAAe,gBAAgB,GAAG,IAAI,CAACD,sBAAsB,CAACT,YAAY,EAAE;IAE7D,KAAAW,QAAQ,GAAe;IACrvDC,OAAO,EAAE,CACP;QACEL,EAAE,EAAEC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAE;QAC5BG,MAAM,EAAE,WAAW;QACnBC,SAAS,EAAE;OACZ,EACD;QACEP,EAAE,EAAEC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAE;QAC5BG,MAAM,EAAE,MAAM;QACdC,SAAS,EAAE;OACZ,EACD;QACEP,EAAE,EAAEC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAE;QAC5BG,MAAM,EAAE,WAAW;QACnBC,SAAS,EAAE;OACZ,EACD;QACEP,EAAE,EAAEC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAE;QAC5BG,MAAM,EAAE,YAAY;QACpBC,SAAS,EAAE;OACZ,CACF;MACDC,aAAa,EAAE;KAChB,CACF;EAEc;EAEfC,YAAYA,CAACC,GAAW,EAAEC,OAAe,EAAEX,EAAU;IACnD,IAAI,CAACT,oBAAoB,CAACqB,IAAI,CAC5B,IAAI,CAACrB,oBAAoB,CAACsB,KAAK,GAC7B,IAAI,CAACpB,2BAA2B,CAACoB,KAAK,GAAG,IAAI,CAACd,QAAQ,CAACe,MAAM,CAChE;IAED,IAAIJ,GAAG,KAAKC,OAAO,EAAE;MACnB,IAAI,CAACtB,mBAAmB,CAACuB,IAAI,CAAC,IAAI,CAACvB,mBAAmB,CAACwB,KAAK,GAAG,CAAC,CAAC;MACjE,IAAI,CAAClB,kBAAkB,CAACiB,IAAI,CAAC,IAAI,CAAC;KACnC,MAAM;MACL,IAAI,CAACjB,kBAAkB,CAACiB,IAAI,CAAC,KAAK,CAAC;;IAErC,IAAI,CAACf,sBAAsB,CAACe,IAAI,CAAC,IAAI,CAAC;IAEtC,IAAI,CAACG,gBAAgB,CAACf,EAAE,EAAEU,GAAG,CAAC;EAChC;EAEAK,gBAAgBA,CAACf,EAAU,EAAEU,GAAW;IACtC,IAAI,CAACX,QAAQ,CAACiB,GAAG,CAAEC,IAAI,IAAI;MACzB,IAAIA,IAAI,CAACjB,EAAE,KAAKA,EAAE,EAAE;QAClBiB,IAAI,CAACZ,OAAO,CAACW,GAAG,CAAC,CAACV,MAAM,EAAEY,CAAC,KAAI;UAC7B,IAAIA,CAAC,GAAG,CAAC,KAAKR,GAAG,EAAE,C;QAErB,CAAC,CAAC;;MAEJ,OAAO,IAAI;IACb,CAAC,CAAC;EACJ;EAEAS,UAAUA,CAAA;IACR,IAAI,CAACjC,iBAAiB,CAAC0B,IAAI,CAAC,IAAI,CAAC1B,iBAAiB,CAAC2B,KAAK,GAAG,CAAC,CAAC;IAC7D,IAAI,CAAClB,kBAAkB,CAACiB,IAAI,CAAC,IAAI,CAAC;IAClC,IAAI,CAACf,sBAAsB,CAACe,IAAI,CAAC,KAAK,CAAC;EACzC;EAEAQ,0BAA0BA,CAACC,KAAa;IACtC,IAAI,CAAC5B,2BAA2B,CAACmB,IAAI,CAACS,KAAK,CAAC;EAC9C;EAEAC,QAAQA,CAAA,GAAU;;AA9MPtC,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAAuC,OAAA,EAAXvC,WAAW,CAAAwC,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}